{"version":3,"sources":["main.min.js"],"names":["Calendar","this","months","weekdays","_parseDate","str","arr","split","day","parseInt","month","year","_ordinalSuffix","num","list","_formatDate","obj","dateObject","Date","cal","getDay","_formatDateInput","_isPast","today","getDate","getMonth","getFullYear","getTime","date","todo","Vue","el","data","weekdayNames","map","a","slice","monthNames","currentYear","currentMonth","todayObj","activeYear","activeMonth","currentList","database","taskList","state","taskOpen","loaded","newTask","enteredTask","enteredDate","sidebar","selected","created","getListDB","localStorage","getItem","console","log","watch","handler","self","filter","deep","setItem","computed","getWeeks","weeks","firstWeekday","monthLength","currentDay","i","push","j","elem","length","todos","getTodos","methods","addNewTask","removeTask","task","index","indexOf","splice","request","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","response","send","saveListDB","alert","stringify","setRequestHeader","addTask","trim","text","checked","id","now","isPast","isState","closeModal","closeSidebar","toggleSidebar","toggleState","selectDay","deselect","key","isToday","value","isSelected","formatDate","prevMonth","nextMonth","prevYear","nextYear"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * Application\r\n */\r\n\r\nvar cal = new Calendar();\r\nvar date = new Date();\r\n\r\n// Store for day names and month names\r\nfunction Calendar () {\r\n    // List of month names\r\n    this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n    // List of weekday names\r\n    this.weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n}\r\n\r\n// Converts date from a 'yyyy-mm-dd' string to an object {day: dd, month: mm, year: yyyy}\r\nfunction _parseDate (str) {\r\n    var arr = str.split('-');\r\n    return {\r\n        day: parseInt(arr[2]),\r\n        // convert month to 0-11 format\r\n        month: parseInt(arr[1]) - 1,\r\n        year: parseInt(arr[0])\r\n    };\r\n}\r\n\r\nfunction _ordinalSuffix(num) {\r\n    var list = ['st', 'nd', 'rd', 'th'];\r\n    if (num % 100 < 10 || num % 100 > 13) {\r\n        switch (num % 10) {\r\n            case 1:\r\n                return list[0];\r\n                break;\r\n            case 2:\r\n                return list[1];\r\n                break;\r\n            case 3:\r\n                return list[2];\r\n                break;\r\n            default:\r\n                return list[3];\r\n                break;\r\n        }\r\n    }\r\n    else {\r\n        return list[3];\r\n    }\r\n    \r\n    var output;\r\n    return\r\n}\r\n\r\nfunction _formatDate (obj) {\r\n    var dateObject = new Date(obj.year, obj.month, obj.day);\r\n    return cal.weekdays[dateObject.getDay()] + \" \" + obj.day + _ordinalSuffix(obj.day) + \" \" + cal.months[obj.month] + \", \" + obj.year;\r\n}\r\n\r\nfunction _formatDateInput (obj) {\r\n    return obj.year + \"-\" + (obj.month + 1) + \"-\" + (obj.day < 10 ? \"0\" + obj.day : obj.day);\r\n}\r\n\r\nfunction _isPast (obj) {\r\n    var today = {\r\n        day: (new Date()).getDate(),\r\n        month: (new Date()).getMonth(),\r\n        year: (new Date()).getFullYear()\r\n    };\r\n\r\n    return (new Date(obj.year, obj.month, obj.day)).getTime() < (new Date(today.year, today.month, today.day)).getTime() ? true : false;\r\n}\r\n\r\n/**\r\n * Main Vue instance\r\n */\r\nvar todo = new Vue({\r\n\r\n    el: '#app',\r\n\r\n    data: {\r\n        weekdayNames: cal.weekdays.map(function (a) {\r\n            return a.slice(0,3);\r\n        }),\r\n        monthNames: cal.months,\r\n        currentYear: date.getFullYear(),\r\n        currentMonth: date.getMonth(),\r\n        today: date.getDate(),\r\n        todayObj: {\r\n            day: date.getDate(),\r\n            month: date.getMonth(),\r\n            year: date.getFullYear()\r\n        },\r\n        activeYear: date.getFullYear(),\r\n        activeMonth: date.getMonth(),\r\n        currentList: [],\r\n        database: false,\r\n        taskList: [],\r\n        state: \"split\",\r\n        taskOpen: false,\r\n        loaded: false,\r\n        newTask: false,\r\n        enteredTask: '',\r\n        enteredDate: '',\r\n        sidebar: false,\r\n        selected: {\r\n            day: date.getDate(),\r\n            month: date.getMonth(),\r\n            year: date.getFullYear()\r\n        }\r\n    },\r\n\r\n    created: function () {\r\n        this.activeMonth = this.currentMonth;\r\n        this.enteredDate = _formatDateInput(this.todayObj);\r\n        this.getListDB();\r\n        if (localStorage.getItem(\"savedState\")) {\r\n            this.state = localStorage.getItem(\"savedState\");\r\n            console.log(\"STATE LOADED\");\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        selected: {\r\n            handler: function () {\r\n                var self = this;\r\n                this.enteredDate = _formatDateInput(this.selected);\r\n                self.currentList = this.taskList.filter(function (a) {\r\n                    //console.log(self.selected.day);\r\n                    return _parseDate(a.date).day === self.selected.day &&\r\n                        _parseDate(a.date).month === self.selected.month &&\r\n                        _parseDate(a.date).year === self.selected.year;\r\n                })\r\n            },\r\n            deep: true\r\n        },\r\n        taskList: {\r\n            handler: function () {\r\n                var self = this;\r\n                self.currentList = this.taskList.filter(function (a) {\r\n                    //console.log(self.selected.day);\r\n                    return _parseDate(a.date).day === self.selected.day &&\r\n                        _parseDate(a.date).month === self.selected.month &&\r\n                        _parseDate(a.date).year === self.selected.year;\r\n                })\r\n            },\r\n            deep: true\r\n        },\r\n        state: {\r\n            handler: function () {\r\n                localStorage.setItem('savedState', this.state);\r\n                console.log(\"STATE SAVED\");\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        // Returns a matrix of days and weeks of the month [[1,2,3,...],[8,9,10,...],...]\r\n        getWeeks: function () {\r\n            // Empty array\r\n            var weeks = [];\r\n            // Date object of the first day of the active month\r\n            var dateObject = new Date(this.activeYear, this.activeMonth, 1);\r\n            // 0-6 numerical value of the first day of the month\r\n            var firstWeekday = dateObject.getDay();\r\n            // Get the month length dynamically so leap years are accounted for\r\n            var monthLength = new Date(this.activeYear, this.activeMonth + 1, 0).getDate();\r\n            // Set current day to 1 each time this function is called\r\n            var currentDay = 1;\r\n\r\n            // Loop through weeks in a month\r\n            for (var i = 0; i < 6 && currentDay < monthLength + 1; i++) {\r\n                weeks.push([]);\r\n                if (i === 0) {\r\n                    // Loop through days in the first week of the month\r\n                    for (var j = 0; j < 7; j++) {\r\n                        if (j < firstWeekday) {\r\n                            weeks[i].push('');\r\n                        }\r\n                        else {\r\n                            weeks[i].push({\r\n                                day: currentDay,\r\n                                month: this.activeMonth,\r\n                                year: this.activeYear,\r\n                            });\r\n                            var elem = weeks[i][weeks[i].length - 1];\r\n                            elem.todos = this.getTodos(elem);\r\n\r\n                            currentDay++;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Loop through days in each other week\r\n                    for (var j = 0; j < 7; j++) {\r\n                        if (currentDay < monthLength + 1) {\r\n                            weeks[i].push({\r\n                                day: currentDay,\r\n                                month: this.activeMonth,\r\n                                year: this.activeYear\r\n                            });\r\n                            var elem = weeks[i][weeks[i].length - 1];\r\n                            elem.todos = this.getTodos(elem);\r\n                            currentDay++;\r\n                        }\r\n                        else {\r\n                            weeks[i].push('');\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            }\r\n\r\n            return weeks;\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        addNewTask: function () {\r\n            this.newTask = true;\r\n            if (this.sidebar) this.sidebar = false;\r\n        },\r\n        \r\n        removeTask: function (task) {\r\n            var index = this.taskList.indexOf(task); \r\n            this.taskList.splice(index, 1);\r\n        },\r\n        \r\n        getListDB: function () {\r\n            var self = this;\r\n            var request = new XMLHttpRequest();\r\n            request.open(\"GET\", \"todolist.php\", true);\r\n            console.log(\"GET LIST\");\r\n            request.onreadystatechange = function() {\r\n                if (this.readyState == 4 && this.status == 200) {\r\n                    self.taskList = JSON.parse(this.response);\r\n                    self.loaded = true;\r\n                    console.log(\"GOT LIST\");\r\n                    self.database = true;\r\n                }\r\n                else {\r\n                    console.log(\"Database List Not Found\");\r\n                    self.database = false;\r\n                    self.loaded = true;\r\n                }\r\n\r\n            };\r\n            request.send();\r\n        },\r\n        saveListDB: function () {\r\n            var request = new XMLHttpRequest();\r\n            \r\n            request.onreadystatechange = function() {\r\n                if (this.readyState == 4 && this.status == 200) {\r\n                    if (this.response === \"SUCCESS\") {\r\n                        alert(\"Task List Saved\");\r\n                    }\r\n                    else {\r\n                        alert(this.response);\r\n                    }\r\n                    \r\n                }\r\n            };\r\n            console.log(JSON.stringify(this.taskList));\r\n            request.open(\"POST\", \"savelist.php\", true);\r\n            request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n            request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n            request.send(\"data=\"+JSON.stringify(this.taskList));\r\n        },\r\n        addTask: function () {\r\n            //Remove whitespace from start and end\r\n            var task = this.enteredTask.trim();\r\n\r\n            var self = this;\r\n\r\n            if (_isPast(_parseDate(self.enteredDate)) === false) {\r\n                if (task) {\r\n                    //Add new a task to the start of the task list\r\n                    this.taskList.push({\r\n                        text: task,\r\n                        checked: false,\r\n                        date: self.enteredDate,\r\n                        id: Date.now()\r\n                    });\r\n\r\n                    console.log(this.taskList[this.taskList.length - 1])\r\n\r\n                    this.enteredTask = \"\";\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Please pick today or a day in the future.\");\r\n            }\r\n        },\r\n        \r\n        isPast: function (obj) {\r\n            return (new Date(obj.year, obj.month, obj.day)).getTime() < (new Date(this.currentYear, this.currentMonth, this.today)).getTime() ? true : false;\r\n        },\r\n\r\n        isState: function (str) {\r\n            return this.state === str;\r\n        },\r\n\r\n        closeModal: function () {\r\n            if (this.taskOpen) this.taskOpen = false;\r\n            if (this.newTask) this.newTask = false;\r\n        },\r\n\r\n        closeSidebar: function () {\r\n            if (this.sidebar) this.sidebar = false;\r\n        },\r\n\r\n        toggleSidebar: function () {\r\n            this.sidebar = this.sidebar === true ? false : true;\r\n        },\r\n\r\n        toggleState: function () {\r\n            this.state = this.state === \"split\" ? \"full\" : \"split\";\r\n        },\r\n\r\n        getTodos: function (obj) {\r\n            return this.taskList.filter(function (a) {\r\n                return _parseDate(a.date).day === obj.day &&\r\n                    _parseDate(a.date).month === obj.month &&\r\n                    _parseDate(a.date).year === obj.year;\r\n            });\r\n        },\r\n\r\n        selectDay: function (elem) {\r\n            if (elem > 0) {\r\n                this.selected.day = elem;\r\n                this.selected.month = this.activeMonth;\r\n                this.selected.year = this.activeYear;\r\n            }\r\n        },\r\n\r\n        deselect: function () {\r\n            for (var key in this.selected) {\r\n                this.selected[key] = false;\r\n            }\r\n        },\r\n\r\n        isToday: function (value) {\r\n            return this.today === value && this.activeMonth === this.currentMonth && this.activeYear === this.currentYear;\r\n        },\r\n\r\n        isSelected: function (value) {\r\n            return this.selected.day === value && this.activeMonth === this.selected.month && this.activeYear === this.selected.year;\r\n        },\r\n\r\n        formatDate: function (obj) {\r\n            return _formatDate(obj);\r\n        },\r\n\r\n        prevMonth: function () {\r\n            if (this.activeMonth === 0) {\r\n                this.activeMonth = 11;\r\n                this.activeYear--;\r\n            }\r\n            else {\r\n                this.activeMonth--;\r\n            }\r\n        },\r\n\r\n        nextMonth: function () {\r\n            if (this.activeMonth === 11) {\r\n                this.activeMonth = 0;\r\n                this.activeYear++;\r\n            }\r\n            else {\r\n                this.activeMonth++;\r\n            }\r\n        },\r\n\r\n        prevYear: function () {\r\n            this.activeYear--;\r\n        },\r\n\r\n        nextYear: function () {\r\n            this.activeYear++;\r\n        }\r\n    }\r\n    \r\n});\r\n\r\n"]}